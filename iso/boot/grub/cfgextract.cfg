# This file is part of Super GRUB2 Disk.
#
# Copyright (C) 2009, 2010 Jordan Uggla
#
# Super GRUB2 Disk is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Super GRUB Disk is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# This script detecs grub.cfg files and creates menu entries to allow the user
# to chose among the grub.cfg files found, then uses "configfile" to load the
# chosen grub.cfg .

set option_title="grub.cfg - "$"Extract entries"

function run_option {

  source "${prefix}/tools.cfg"

  insmod regexp

  cfg_found=false

  for cfg in (*)/boot/grub/grub.cfg (*)/grub/grub.cfg (*)/boot/grub2/grub.cfg \
	    (*)/grub2/grub.cfg; do
    regexp --set=1:cfg_device '^\((.*)\)/' "$cfg"

    # Assume that if cfg_device is (cd) it's SG2D's grub.cfg. This is not covered
    # by the check to see if the path is the same as $prefix/grub.cfg because
    # $prefix will contain a device like (hd96) not (cd). In future versions of
    # grub there will be a -ef option for grub's test command which should be used
    # instead.
    if searchindevice "$cfg_device" ; then
	if [ "$cfg_device" != "cd" -a "$cfg" != "${prefix}/grub.cfg" \
	    -a -e "$cfg" ]; then
	  cfg_found=true

	  menuentry "${secondoption_prefixtab_str}"$"Entries from""${three_dots_str}"" ""${cfg}${secondoption_postfixtab_str}" {
	    sleep 1s
	  }
	  root="$cfg_device"
	  extract_entries_source "$cfg"
	  
	fi
    fi
  done

  if [ "$cfg_found" != true ]; then
    menuentry "${finaloption_tab_str}"$"(No grub.cfg file detected)" {
      sleep 1
    }
  fi

}